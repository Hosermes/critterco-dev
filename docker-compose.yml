version: "3"

services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    command: ["./wait-for-it.sh", "db:5432", "--", "./start-up.sh"]
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - TZ=Asia/Tehran
    depends_on:
      - db

  db:
    image: kartoza/postgis:12.0
    environment:
      - TZ=Asia/Tehran
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  nginx:
    image: nginx:alpine
    ports:
      - "0.0.0.0:80:80"
    depends_on:
      - backend
    volumes:
      - ./nginx/dev.conf:/etc/nginx/nginx.conf:ro

  # pgadmin:
  #   image: dpage/pgadmin4
  #   depends_on:
  #     - db
  #   ports:
  #     - 5050:80
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - "/app/node_modules"
    ports:
      - "8081:8080"
    depends_on:
      - backend

  portainer:
    image: portainer/portainer
    container_name: portainer
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - C:\ProgramData\Portainer:/data

volumes:
  staticfiles_root:
  portainer_data:
  postgis_data: {}
